<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 반드시 query 끝에 세미콜론 생략 -->
<mapper namespace="com.tenco.bankapp.repository.interfaces.AccountRepository">
	
	<!-- 입금 -->
	<insert id="insert">
		INSERT INTO account_tb(number, password, balance, user_id, created_at)
						VALUES(#{number}, #{password}, #{balance}, #{userId}, now())
	</insert>
	
	<!-- 계좌 정보 수정 -->
	<update id="updateById">
		UPDATE account_tb 
		SET number = #{number}, password = #{password}, balance = #{balance}, user_id = #{userId}
		WHERE id = #{id}
	</update>
	
	<!-- 계좌 정보 삭제 -->
	<delete id="deleteById">
		DELETE FROM account_tb WHERE id = #{id}
	</delete>
	
	<!-- 계좌를 계좌 id로 특정 계좌만 조회 -->
	<select id="findById" resultType="com.tenco.bankapp.repository.entity.Account">
		SELECT * FROM account_tb WHERE id = #{id}
	</select>
	
	<!-- 계좌를 유저 id로 조회 : 특정 유저가 가진 계좌들 조회 -->
	<select id="findByUserId" resultType="com.tenco.bankapp.repository.entity.Account">
		SELECT * FROM account_tb WHERE user_id = #{principalId}
	</select>
	
	<!-- 계좌 전체 조회 -->
	<select id="findAll" resultType="com.tenco.bankapp.repository.entity.Account">
		SELECT * FROM account_tb
	</select>
	
	<!-- 계좌 번호로 조회 -->
	<select id="findByNumber" resultType="com.tenco.bankapp.repository.entity.Account">
		SELECT * FROM account_tb WHERE number = #{number}
	</select>
	
</mapper>